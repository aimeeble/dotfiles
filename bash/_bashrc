
# Alias preferences
alias ls='ls -F'
alias ll='ls -l'
alias grep="grep --color"

ame_io() {
   local lang=""
   local title=""
   local args=`getopt t:l: $*`
   if [ $? -ne 0 ]; then
      return
   fi
   set -- $args
   for i; do
      case "$i" in
         -l)
            lang="-F 'lang=$2'"
            shift
            shift
            ;;
         -t)
            title="-F 'title=$2'"
            shift
            shift
            ;;
         --)
            shift
            break
      esac
   done

   #echo "curl -F 'p=<-' $lang $title http://ame.io/new_paste"
   eval "curl -F 'p=<-' $lang $title http://ame.io/new_paste"
}
alias ame.io=ame_io

# Helper functions
git_branch() {
   local BRANCH=`git symbolic-ref HEAD 2>&1 | sed "s/refs\/heads\///"`

   echo "$BRANCH" | grep -qs fatal
   if [ "$?" == "0" ]; then
      unset GIT_BRANCH
   else
      export GIT_BRANCH="$BRANCH"
   fi
}

git_changes()
{
   #if [ -z "$GIT_BRANCH" ]; then
      return
   #fi

   git status | grep "directory clean" 2>&1 > /dev/null
   if [ $? -eq 0 ]; then
      unset GIT_CHANGES
   else
      export GIT_CHANGES=*
   fi
}

calc_fill_length() {
   local TERMWIDTH=$(($COLUMNS - 1))
   local HOSTNAME=`hostname -s`
   local MYPWD=${PWD/$HOME/\~}

   if [ "${USER}" != "aimeeble" ]; then
      local PSUSER=$USER
   fi
   local MAIN="--( ${PSUSER:+${PSUSER}}@${HOSTNAME}${GIT_BRANCH:+ $GIT_BRANCH}${GIT_CHANGES:+$GIT_CHANGES}${VIRTUAL_ENV:+ `basename $VIRTUAL_ENV`} )-"
   local P="-( $MYPWD )--"
   local MAIN_LEN=${#MAIN}
   local P_LEN=${#P}
   local TOTAL_PROMPT_LEN=$(($MAIN_LEN + $P_LEN))

   export PROMPT_FILL_LEN=$(($TERMWIDTH - $TOTAL_PROMPT_LEN))
}

# Prompt
export PROMPT_FILL="------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"

case "$TERM" in
xterm*|rxvt*|screen*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007";'
    ;;
*)
    ;;
esac
PROMPT_COMMAND="${PROMPT_COMMAND}git_branch;git_changes;calc_fill_length"

# Define some colors to use in the prompt
BLACK='\[\033[0;30m\]'
RED='\[\033[0;31m\]'
GREEN='\[\033[0;32m\]'
BROWN='\[\033[0;33m\]'
BLUE='\[\033[0;34m\]'
PURPLE='\[\033[0;35m\]'
CYAN='\[\033[0;36m\]'
LIGHTGRAY='\[\033[0;37m\]'
DARKGRAY='\[\033[1;30m\]'
LIGHTRED='\[\033[1;31m\]'
LIGHTGREEN='\[\033[1;32m\]'
YELLOW='\[\033[1;33m\]'
LIGHTBLUE='\[\033[1;34m\]'
LIGHTPURPLE='\[\033[1;35m\]'
LIGHTCYAN='\[\033[1;36m\]'
WHITE='\[\033[1;37m\]'
RESET='\[\033[00m\]'

if [ "${USER}" != "aimeeble" ]; then
   PS1=$DARKGRAY'-'$RESET'-'$WHITE'( '$LIGHTGREEN'\u@\h'$RESET
else
   PS1=$DARKGRAY'-'$RESET'-'$WHITE'( '$LIGHTGREEN'@\h'$RESET
fi
PS1+='${GIT_BRANCH:+ '$YELLOW'$GIT_BRANCH'$RESET'}${GIT_CHANGES:+'$LIGHTRED'${GIT_CHANGES}'$RESET'}'
PS1+='${VIRTUAL_ENV:+ '$RED'`basename $VIRTUAL_ENV`'$RESET'} '
PS1+=$WHITE')'$RESET'-'$DARKGRAY'${PROMPT_FILL:0:$PROMPT_FILL_LEN}'
PS1+=$RESET'-'$WHITE'( '$LIGHTBLUE'\w'$RESET' '$WHITE')'$RESET'-'$DARKGRAY'-\n'
PS1+='-'$RESET'-'$WHITE'('$RESET' \t !\! '$WHITE')'$RESET'-'$DARKGRAY'-'$RESET'\$ '
PS2=$DARKGRAY'MOAR'$RESET'> '
export PS1 PS2

[ -f ~/.git-completion.bash ] && . ~/.git-completion.bash

# Environment
export PATH=/usr/local/bin:/usr/local/sbin:/usr/local/share/python:$HOME/bin:$PATH
export VISUAL=vim
export EDITOR=vim
export VIRTUAL_ENV_DISABLE_PROMPT=1
export WORKON_HOME=$HOME/.venvs

# Source the platform and local bashrc files.
PLATFORM_BASH_RC="$HOME/.bashrc-`uname -s`"
[ -f "$PLATFORM_BASH_RC" ] && . "$PLATFORM_BASH_RC"
LOCAL_BASH_RC="$HOME/.bashrc-local"
[ -f "$LOCAL_BASH_RC" ] && . "$LOCAL_BASH_RC"
