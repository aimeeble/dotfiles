# Use C-t (like my screen preference)
set -g prefix C-t
bind-key t send-prefix
bind-key C-t last-window

# Add the -u option to show the window-tree fully expanded.
bind-key -r s choose-tree
bind-key -r D choose-client -N -O name "detach-client -t '%%'"

# Be a bit more lax about releasing ctrl for next/prev windows
bind-key -r C-n next-window
bind-key -r C-p previous-window
bind-key -r C-c new-window
bind-key -r C-d detach

# Blinky, no beepy
set -g visual-bell off
set -g bell-action any

set-option -sg escape-time 10
set-option -sa terminal-overrides ',xterm-256color:RGB'

# Basic window options
set-window-option -g aggressive-resize on
set-window-option -g mode-keys vi
set-option -g default-terminal "screen-256color"

# Status bar
set-option -g status on
set-option -g status-keys emacs
set-option -g status-style fg=white,bg=black
set-option -g status-left-style fg=brightblue
set-option -g status-left-length 32
set-option -g status-left '[#S] '
set-option -g status-right-style fg=white
set-option -g status-right '(#{window_width}x#{window_height}) #{pane_tty} via #{client_tty} #[fg=brightgreen]@#h #[fg=white]%Y-%m-%d %H:%M'
set-option -g status-right-length 80

# Window status
set-option -g window-status-current-style fg=brightgreen
set-option -g window-status-activity-style fg=yellow,bg=black
set-option -g window-status-bell-style fg=red,bg=black
set-option -g window-status-format '#I:#W#F'

# Selcting a window
bind-key '"' choose-window

# Monitoring
set-option -g monitor-silence 900  # flag windows which are idle for 15+ mins
set-option -g monitor-activity off

# Titles
set-option -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W'
set-window-option -g automatic-rename on

# Split like vim
bind-key | split-window -h
bind-key v split-window -v
bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r C-l select-pane -R

# Toggle small/big status-right
bind r \
  set-option status-right '#[fg=brightgreen]@#h'\; \
  display "Small status"
bind R \
  set-option status-right '(#{window_width}x#{window_height}) #{pane_tty} via #{client_tty} #[fg=brightgreen]@#h #[fg=white]%Y-%m-%d %H:%M'\; \
  display "Large status"

# Mouse on/off toggle
bind m \
  set -g mode-mouse off\; \
  set -g mouse-resize-pane off \; \
  set -g mouse-select-pane off \; \
  set -g mouse-select-window off \; \
  display 'Mouse: OFF'
bind M \
  set -g mode-mouse on\; \
  set -g mouse-resize-pane on \; \
  set -g mouse-select-pane on \; \
  set -g mouse-select-window on \; \
  display 'Mouse: ON'

# Toggle logging of pane
bind H pipe-pane -o "exec cat >> $HOME/'tmux.#S.#I.#W.log'" \; display-message "Logging to $HOME/tmux.#S.#I.#W.log"
bind h pipe-pane \; display-message "Disabled logging to $HOME/tmux.#S.#I.#W.log"

# Hack to fix the namespace user processes run under.
set-option -g default-command "$HOME/bin/safe-reattach-to-user-namespace -l $SHELL"

set-option -g update-environment 'DBUS_SESSION_BUS_ADDRESS DISPLAY KRB5CCNAME SSH_AGENT_PID SSH_ASKPASS SSH_AUTH_SOCK SSH_CLIENT SSH_CONNECTION SSH_TTY WINDOWID XAUTHORITY XDG_SEAT_PATH XDG_SESSION_COOKIE XDG_SESSION_ID XDG_SESSION_PATH'

set -g command-alias[100] 'cd=attach-session -t . -c '
